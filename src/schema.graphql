scalar DateTime

"Standard Player Implementation made for every user"
type Player {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  activeBattleId: String
}
union PlayerResult = Player | Error

type Error {
  message: String!
  type: ErrorType!
  errorId: String!
}

enum ErrorType {
  NOT_FOUND
  INVALID_INPUT
  SERVER_ERROR
}

type Query {
  getPlayer(id: ID!): PlayerResult!
}

type Mutation {
  createPlayer(id: ID!): PlayerResult!
}